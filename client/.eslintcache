[{"/usr/app/src/index.js":"1","/usr/app/src/App.js":"2","/usr/app/src/components/Header.js":"3","/usr/app/src/components/Footer.js":"4","/usr/app/src/pages/Error.js":"5","/usr/app/src/pages/Login.js":"6","/usr/app/src/pages/Register.js":"7","/usr/app/src/pages/Book.js":"8","/usr/app/src/pages/Add.js":"9","/usr/app/src/pages/Index.js":"10","/usr/app/src/components/Tag.js":"11","/usr/app/src/components/BookPreview.js":"12"},{"size":504,"mtime":1677072621449,"results":"13","hashOfConfig":"14"},{"size":929,"mtime":1677072937257,"results":"15","hashOfConfig":"14"},{"size":152,"mtime":1677072621449,"results":"16","hashOfConfig":"14"},{"size":131,"mtime":1677072621449,"results":"17","hashOfConfig":"14"},{"size":126,"mtime":1677072621449,"results":"18","hashOfConfig":"14"},{"size":1091,"mtime":1677072891955,"results":"19","hashOfConfig":"14"},{"size":1541,"mtime":1677072621449,"results":"20","hashOfConfig":"14"},{"size":2526,"mtime":1677072621449,"results":"21","hashOfConfig":"14"},{"size":2762,"mtime":1677147682794,"results":"22","hashOfConfig":"14"},{"size":835,"mtime":1677081253198,"results":"23","hashOfConfig":"14"},{"size":250,"mtime":1677072621449,"results":"24","hashOfConfig":"14"},{"size":1548,"mtime":1677081354260,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1q6dqz2",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/usr/app/src/index.js",[],["53","54"],"/usr/app/src/App.js",[],"/usr/app/src/components/Header.js",[],"/usr/app/src/components/Footer.js",[],"/usr/app/src/pages/Error.js",[],"/usr/app/src/pages/Login.js",[],"/usr/app/src/pages/Register.js",[],"/usr/app/src/pages/Book.js",[],"/usr/app/src/pages/Add.js",["55","56","57"],"import React, {useEffect, useState} from 'react'\nimport axios, * as others from 'axios';\n\nfunction Add() {\n    const [book, setBook] = useState({\n        id:\"\",\n        title:\"\",\n        body:\"\",\n        author:\"\"\n    })\n\n    const [isbnNr, setIsbnNr] = useState(undefined);\n    const [tag, setTag] = useState(undefined);\n\n    function fetchBook() {\n        var isbn = require('node-isbn');\n        isbn.resolve(isbnNr, function (err, fetched_book) {\n            if (err) {\n                console.log('Book not found', err);\n            } else {\n                book.id = isbnNr\n                book.title = fetched_book.title\n                book.body = fetched_book.description\n                book.author = fetched_book.authors[0]\n                addBook();\n            }\n        })\n    }\n\n    // TODO: Move temporary removeBook function to better location\n    const removeBook = () => {\n        axios.delete(\"http://localhost:8080/api/books/\" + isbnNr)\n        .then(res => {\n            console.log(res)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    const addBook = () => {\n        axios.get(\"http://localhost:8080/api/books/\" + isbnNr)\n        .then(res => {\n            console.log(res)\n            if(!res.data.data) {\n                if (book) {\n                    axios.post(\"http://localhost:8080/api/books/\", book)\n                    .then(res=>console.log(res))\n                    .catch(err=>console.log(err))\n                }\n                else {\n                    alert(\"invalid input\")\n                }\n            }\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    const addTag = () => {\n        let newTag = {\n            name: tag,\n            slug: 'tag-1'\n        }\n        axios.post(\"http://localhost:8080/api/tags/\", newTag)\n        .then(res=> {\n            console.log(res)\n            let modifiedFields = {\n                tag: res.data.data\n            }\n            axios.patch(\"http://localhost:8080/api/tags/\" + isbnNr, modifiedFields)\n            .then(res => {\n                console.log(res)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        })\n        .catch(err=>console.log(err))\n    }\n\n    return (\n    <>\n        <form action='#'>\n            <input type=\"text\" id=\"isbn\" name=\"isbn\" onInput={e => setIsbnNr(e.target.value)}/>\n            <button type=\"submit\" onClick={fetchBook}>Fetch Book</button>\n            <button type=\"submit\" onClick={removeBook}>Remove Book</button>\n            <input type=\"text\" id=\"tag\" name=\"tag\" onInput={e => setTag(e.target.value)}/>\n            <button type=\"submit\" onClick={addTag}>Add Tag</button>\n        </form>\n    </>);\n}\n\nexport default Add;","/usr/app/src/pages/Index.js",["58"],"import BookPreview from \"../components/BookPreview\"\nimport axios, * as others from 'axios';\nimport React, {useEffect, useState} from 'react'\n\nfunction Index() {\n  const [books, setBooks] = useState(undefined)\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/books/\")\n    .then(res => setBooks(res.data.data))\n    .then(console.log(books))\n  // eslint-disable-next-line\n  }, [])\n\n    return (\n    <main className=\"App-content\">\n        <h1>Welcome to Responsive Digital Library</h1>\n        <p>\n          Here you will be able to keep track of your books.\n        </p>\n        <div>\n          {\n            books ? books.map((book) => <span key={book._id}><BookPreview id={book._id} title={book.title} body={book.body} author={book.author}/></span>) : <></>\n          }\n        </div>\n    </main>);\n}\n\nexport default Index;","/usr/app/src/components/Tag.js",[],"/usr/app/src/components/BookPreview.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":16,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"67","line":2,"column":20,"nodeType":"65","messageId":"66","endLine":2,"endColumn":26},{"ruleId":"63","severity":1,"message":"68","line":5,"column":18,"nodeType":"65","messageId":"66","endLine":5,"endColumn":25},{"ruleId":"63","severity":1,"message":"67","line":2,"column":20,"nodeType":"65","messageId":"66","endLine":2,"endColumn":26},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'others' is defined but never used.","'setBook' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]